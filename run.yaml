---
- name: setup
  hosts: all
  vars_files:
    - vars/vars
    - vars/vault
    - vars/common_vars 
    - vars/common_vault
  vars:
    - project_stage_dir: "{{ stage_dir }}/{{ project_id }}/{{ inventory_hostname }}"
  tasks:
    - name: setup
      debug: msg="gathered info from host" 
      
- name: CA generation
  hosts: registry
  vars_files:
    - vars/vars 
    - vars/vault
    - vars/common_vars 
    - vars/common_vault
  vars:
    - project_stage_dir: "{{ stage_dir }}/{{ project_id }}/{{ inventory_hostname }}"
  post_tasks:
    - name: sync the CA
      synchronize:
        src: "{{ ca_dir }}/"
        dest: ca/
        mode: pull
    - name: create folder for trusted ca
      file: path=/usr/local/share/ca-certificates/{{ project_id }} state=directory
      become: true
      become_user: root
    - name: transfer the CA certificate
      copy: remote_src=True src="{{ ca_dir }}/ca.pem" dest=/usr/local/share/ca-certificates/{{ project_id }}/ca.crt
      become: true
      become_user: root
    - name: update list of trusted CAs 
      command: update-ca-certificates
      become: true
      become_user: root
    - name: restart docker
      service: name=docker state=restarted
      become: true
      become_user: root
  roles:
    - ca


- name: Run registry
  hosts: registry
  vars_files:
    - vars/vars 
    - vars/vault
    - vars/common_vars 
    - vars/common_vault
  vars:
    - project_stage_dir: "{{ stage_dir }}/{{ project_id }}/{{ inventory_hostname }}"
  post_tasks:
    - name: login to the registry
      command: docker login -u {{ registry_user }} -p {{ registry_pass }} -e null https://{{ docker_registry }}
  roles:
    - registry
    
